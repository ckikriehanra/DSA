#include<iostream>
#include<fstream>
using namespace std;
class UnionFind
{
public:
	int size;
	int* id;
	UnionFind(int x)
	{
		size = x;	
	}	
};
void Initialize(UnionFind& var)
{
	int i;
	var.id = new int[var.size];
	for(i = 0; i < var.size; i++)
		var.id[i] = i;
}
int Find(UnionFind& var, int p)//find root of p
{
	while(var.id[p]!=p)
	{
		p = var.id[p];
	}
	return p;
}
int Connected(UnionFind& var, int p, int q)//check are root of p equal root of q
{
	return Find(var, p) == Find(var, q);	
}

void Union(UnionFind& var, int p, int q)
{
	var.id[var, Find(var, p)]= Find(var, q);
}
void Display(UnionFind& var)
{
	for(int i = 0; i < var.size; i++)
		cout << Find(var, i) << " ";
}
int main()
{
	int n, p, q;
	cin >> n;
	UnionFind var(n);
	Initialize(var);
	ifstream out;
	out.open("input.txt");	
	while(out)
	{
		out >> p >> q;
		if(!Connected(var, p, q))
			Union(var, p, q);	
	}
	out.close();
	Display(var);
	
	return 0;
}
