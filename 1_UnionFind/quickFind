#include<iostream>
#include<fstream>
using namespace std;

class UnionFind
{
public:
	int size;
	int* values;
	UnionFind(int x) 
	{
		size = x;
	}	
};
int Connected(UnionFind& var, int p, int q)//check are p and q connected
{
	return (var.values[p] == var.values[q]); 
}

void Union(UnionFind& var, int p, int q)
{
	int temp =var.values[p];
	for(int i = 0; i < var.size; i++)
		if(var.values[i] == temp)
			var.values[i] = var.values[q];
}

void Display(UnionFind& var)
{
	for(int i = 0; i < var.size; i++)
		cout << var.values[i] << " ";
}
int main()
{
	int n, i, p, q;
	cin >> n;
	UnionFind var(n);//Initialize var has n objects
	var.values = new int[n];
	for(i = 0; i < n; i++)
		cin >> var.values[i];
	ifstream out;
	out.open("input.txt");	
	while(out)
	{
		out >> p >>q;
		if(!Connected(var, p, q))
			Union(var, p, q);	
	}
	out.close();
	Display(var);		
	
	
	
	return 0;
}
